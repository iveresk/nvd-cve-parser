package main

import (
	"flag"
	"log"
	"os"
)

func main() {
	mode := flag.String("m", "", "Mode of the tool usage defining the algo of it.")
	flag.Parse()
	// Setting up the default mode usage for scanning network devices for CVEs
	// in a case that nothing was settled for the run
	if *mode == "" {
		*mode = "ndtocve"
	}
	// main algo is described here
	var devices Devices
	devices = readDevices()

	// chasing mode case to define the model of behavior and collection of API calls for JSON(s) update.
	switch *mode {
	case "ndtocve":
		// TODO the main algo here for the scanning network devices for CVEs
		var json []byte
		for _, device := range devices.devices["devices"] {
			json = findKeyword(device)
			os.WriteFile("./json/"+device+".json", json, 0666)
		}
		log.Println("The JSON files for the devices are successfully created")
	case "libtocve":
		// TODO the main algo here for the scanning code, imports for CVEs
	case "libtocwe":
		// TODO the main algo here for the scanning code, imports for CWEs
	case "update":
		// TODO update flow
	default:
		log.Fatal("Check your args, something went very wrong")
	}
}
