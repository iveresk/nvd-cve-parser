package main

import (
	"fmt"
	"log"
	"moul.io/banner"
)

// TODO Think on how to devide Message body to entities
type LogMessage struct {
	MessageType string `json:"regular"`
	Message     string `json:"Something went very wrong"`
	Environment string `json:"product"`
	IP          string `json:"IP address"`
	PORT        string `json:"IP PORT"`
}

func getHelper(message string) {
	fmt.Println(banner.Inline("iveresk scanner."))
	fmt.Println(banner.Inline("---------------"))
	fmt.Println("")
	log.Fatal("The error is " + message)
}

// TODO Make it as a struct method
func (m *LogMessage) getLogger() {
	switch m.MessageType {
	case "helper":
		getHelper(m.Message)
	case "fatal":
		log.Fatal(m.Message)
	case "regular":
		log.Println(m.Message)
	case "error":
		if m.Environment == "debugging" {
			log.Println(m.Message)
		}
	default:
		getHelper(m.Message)
	}

}
